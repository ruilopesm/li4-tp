@page "/won"

@inject AuthenticationStateProvider AuthProvider
@inject IAuctionService _auctionService
@inject IUserService _userService
@inject IBidService _bidService

<PageTitle>Leilões ganhos</PageTitle>

@if (auctions == null)
{
    <p>Carregando...</p>
}
else
{
    <div class="flex flex-row items-baseline space-x-2">
    <p class="text-4xl font-bold">Leilões ganhos</p>
    <p class="text-sm">(@auctions.Count())</p>
</div>

    <ul class="flex flex-col my-6 space-y-6">
    @foreach (var (auction, totalBids) in auctions)
        {
            <li class="relative flex items-center justify-between px-6 py-5 bg-pcs-lightest-gray rounded-xl border">
                <div class="flex items-center gap-x-4 pr-6 w-1/2 flex-none">
                    @if (auction.Product.Images.Count >= 1)
                    {
                        <img class="object-scale-down h-24 w-24 flex-none" src="@auction.Product.Images[0]">
                    }
                    else
                    {
                        <div class="h-24 w-24 flex-none rounded-full bg-gray-50 animate-pulse"></div>
                    }
                    <div class="min-w-0 flex-auto">
                        <div class="flex flex-row items-center">
                            <p class="text-3xl font-semibold leading-6 text-gray-900">
                                @auction.Product.Model.Name
                            </p>
                            <div class="border py-0.25 px-3 ml-4 rounded-xl text-xs bg-white">@auction.Product.Model.Color</div>
                            @if (@auction.Product.Model.Storage != null)
                            {
                                <div class="border py-0.25 px-3 ml-2 rounded-xl text-xs bg-white">@auction.Product.Model.Storage
                                </div>
                            }
                        </div>
                        <p class="mt-1 flex items-center space-x-1 text-sm leading-5">
                           @if (!auction.IsCancelled && auction.End > DateTime.Now && auction.End - DateTime.Now < TimeSpan.FromHours(1))
                            {
                                <svg class="w-4 h-4" viewBox="0 0 48 48" fill="#c73030">
                                    <path d="M 24 4 C 12.972066 4 4 12.972074 4 24 C 4 35.027926 12.972066 44 24 44 C 35.027934 44 44 35.027926 44 24 C 44 12.972074 35.027934 4 24 4 z M 24 7 C 33.406615 7 41 14.593391 41 24 C 41 33.406609 33.406615 41 24 41 C 14.593385 41 7 33.406609 7 24 C 7 14.593391 14.593385 7 24 7 z M 22.476562 11.978516 A 1.50015 1.50015 0 0 0 21 13.5 L 21 24.5 A 1.50015 1.50015 0 0 0 21.439453 25.560547 L 26.439453 30.560547 A 1.50015 1.50015 0 1 0 28.560547 28.439453 L 24 23.878906 L 24 13.5 A 1.50015 1.50015 0 0 0 22.476562 11.978516 z"></path>
                                </svg>
                                <p class="text-pcs-red">@ViewUtils.PrettyDisplayDateTime(auction.End)</p>
                            }
                            else
                            {
                                @if (auction.IsCancelled)
                                {
                                    <svg class="h-6 w-6" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M13.06 12L17.48 7.57996C17.5537 7.5113 17.6128 7.4285 17.6538 7.3365C17.6948 7.2445 17.7168 7.14518 17.7186 7.04448C17.7204 6.94378 17.7018 6.84375 17.6641 6.75036C17.6264 6.65697 17.5703 6.57214 17.499 6.50092C17.4278 6.4297 17.343 6.37356 17.2496 6.33584C17.1562 6.29811 17.0562 6.27959 16.9555 6.28137C16.8548 6.28314 16.7555 6.30519 16.6635 6.34618C16.5715 6.38717 16.4887 6.44627 16.42 6.51996L12 10.94L7.58 6.51996C7.43782 6.38748 7.24978 6.31535 7.05548 6.31878C6.86118 6.32221 6.67579 6.40092 6.53838 6.53834C6.40096 6.67575 6.32225 6.86113 6.31882 7.05544C6.3154 7.24974 6.38752 7.43778 6.52 7.57996L10.94 12L6.52 16.42C6.37955 16.5606 6.30066 16.7512 6.30066 16.95C6.30066 17.1487 6.37955 17.3393 6.52 17.48C6.66062 17.6204 6.85125 17.6993 7.05 17.6993C7.24875 17.6993 7.43937 17.6204 7.58 17.48L12 13.06L16.42 17.48C16.5606 17.6204 16.7512 17.6993 16.95 17.6993C17.1488 17.6993 17.3394 17.6204 17.48 17.48C17.6204 17.3393 17.6993 17.1487 17.6993 16.95C17.6993 16.7512 17.6204 16.5606 17.48 16.42L13.06 12Z" fill="#bbbbbb"/>
                                    </svg>  
                                    <p class="text-pcs-light-gray">Cancelado</p>
                                }
                                else
                                {
                                    <svg class="w-4 h-4" viewBox="0 0 48 48" fillCurrentColor="currentColor">
                                        <path d="M 24 4 C 12.972066 4 4 12.972074 4 24 C 4 35.027926 12.972066 44 24 44 C 35.027934 44 44 35.027926 44 24 C 44 12.972074 35.027934 4 24 4 z M 24 7 C 33.406615 7 41 14.593391 41 24 C 41 33.406609 33.406615 41 24 41 C 14.593385 41 7 33.406609 7 24 C 7 14.593391 14.593385 7 24 7 z M 22.476562 11.978516 A 1.50015 1.50015 0 0 0 21 13.5 L 21 24.5 A 1.50015 1.50015 0 0 0 21.439453 25.560547 L 26.439453 30.560547 A 1.50015 1.50015 0 1 0 28.560547 28.439453 L 24 23.878906 L 24 13.5 A 1.50015 1.50015 0 0 0 22.476562 11.978516 z"></path>
                                    </svg>
                                    <p>@ViewUtils.PrettyDisplayDateTime(auction.End)</p>
                                }
                            }
                        </p>
                    </div>
                </div>
                <div class="flex items-center justify-between gap-x-4 w-1/2 flex-none">
                    <ul class="block">
                        <li class="text-sm leading-6">@ProductModel.ConditionString(auction.Product.Condition)</li>
                        <li class="text-sm leading-6">@ProductModel.StateString(auction.Product.State)</li>
                    </ul>
                    <div class="absolute flex flex-col items-center ml-40">
                        <p class="text-lg font-medium">Vencido por</p>
                        <p class="text-3xl font-bold text-pcs-green underline">@Math.Round(auction.CurrentPrice, 2)€</p>
                    </div>
                    <div class="flex flex-col ml-28 items-center space-y-1">
                        <NavLink href="@($"/auction/{auction.ID}")"
                            class="bg-pcs-gray hover:bg-scs-gray rounded-lg text-white font-bold text-lg py-1 px-3">
                            Ver detalhes
                        </NavLink>
                        <p class="text-sm">@(totalBids == 1 ? "1 licitação" : $"{totalBids} licitações")</p>
                    </div>
                </div>
            </li>
        }
    </ul>
}

@code {
    private List<(AuctionModel, int)>? auctions { get; set; }
    private BidderModel? _bidder;

    protected override async Task OnInitializedAsync()
    {
        auctions = new List<(AuctionModel, int)>();

        var ourProvider = (AuthProvider)AuthProvider;
        var email = await ourProvider.GetEmail();
        if (email != null)
        {
            _bidder = await _userService.GetBidder(email);
            if (_bidder != null)
            {
                var onlyAuctions = await _auctionService.GetUserWonAuctions(_bidder.NIF);

                foreach (var auction in onlyAuctions)
                {
                    var totalBids = await _bidService.GetTotalBids(auction.ID);
                    auctions.Add((auction, totalBids));
                }
            }
        }
        
        await Task.Run(async () =>
        {
            while (true)
            {
                await Task.Delay(1000);
                await InvokeAsync(StateHasChanged);
            }
        });
    }
}
