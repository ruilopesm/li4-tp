@page "/auction/{id:int}"

@inject AuthenticationStateProvider AuthProvider
@inject IJSRuntime js
@inject IAuctionService _auctionService
@inject IBidService _bidService
@inject IUserService _userService

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms

<PageTitle>Detalhes</PageTitle>

@if (auction == null)
{
    <p>Carregando...</p>
}
else
{
    @if (admin == null)
    {
        <div class="flex flex-row items-center">
            <p class="text-4xl font-bold">Leilão - @auction.Product.Model.Name</p>
            <p class="text-md text-gray-600 ml-2">#@Id</p>
        </div>
    }
    else
    {
        <div class="flex justify-between">
            <div class="flex flex-row items-center">
                <p class="text-4xl font-bold">Leilão - @auction.Product.Model.Name</p>
                <p class="text-md text-gray-600 ml-2">#@Id</p>
            </div>
            @if (auction.End > DateTime.Now)
            {
                <button @onclick="() => Cancel()" class="flex flex-row items-center space-x-1">
                    <svg class="h-6 w-6" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M13.06 12L17.48 7.57996C17.5537 7.5113 17.6128 7.4285 17.6538 7.3365C17.6948 7.2445 17.7168 7.14518 17.7186 7.04448C17.7204 6.94378 17.7018 6.84375 17.6641 6.75036C17.6264 6.65697 17.5703 6.57214 17.499 6.50092C17.4278 6.4297 17.343 6.37356 17.2496 6.33584C17.1562 6.29811 17.0562 6.27959 16.9555 6.28137C16.8548 6.28314 16.7555 6.30519 16.6635 6.34618C16.5715 6.38717 16.4887 6.44627 16.42 6.51996L12 10.94L7.58 6.51996C7.43782 6.38748 7.24978 6.31535 7.05548 6.31878C6.86118 6.32221 6.67579 6.40092 6.53838 6.53834C6.40096 6.67575 6.32225 6.86113 6.31882 7.05544C6.3154 7.24974 6.38752 7.43778 6.52 7.57996L10.94 12L6.52 16.42C6.37955 16.5606 6.30066 16.7512 6.30066 16.95C6.30066 17.1487 6.37955 17.3393 6.52 17.48C6.66062 17.6204 6.85125 17.6993 7.05 17.6993C7.24875 17.6993 7.43937 17.6204 7.58 17.48L12 13.06L16.42 17.48C16.5606 17.6204 16.7512 17.6993 16.95 17.6993C17.1488 17.6993 17.3394 17.6204 17.48 17.48C17.6204 17.3393 17.6993 17.1487 17.6993 16.95C17.6993 16.7512 17.6204 16.5606 17.48 16.42L13.06 12Z" fill="#c73030"/>
                    </svg>
                    <p class="text-lg text-pcs-red">Cancelar leilão</p>
                </button>
            }
        </div>
    }

    <div class="grid grid-cols-3 grid-rows-6 gap-4 mt-4">
        <div class="flex justify-center items-center row-span-6 bg-white rounded-lg">
            @if (auction.Product.Images.Count >= 1)
            {
                <img class="size-max flex-none bg-white " src="@auction.Product.Images[0]">
            }
        </div>
        
        <div class="row-span-3 bg-gray-100 rounded-lg py-3">
            <div class="flex justify-center text-lg">
                Características
            </div>
            <div class="flex justify-center mt-1">
                <div class="w-[90%] h-0.5 bg-gray-300 rounded-full"></div>
            </div>
            <ul class="flex flex-col mt-3 space-y-2">
                <li class="flex flex-row items-center justify-between mx-6">
                    <p class="text-md font-bold">Cor</p>
                    <div class="border py-0.25 px-3 rounded-xl bg-white text-md">@auction.Product.Model.Color</div>
                </li>
                <li class="flex flex-row justify-between mx-6">
                    <p class="text-md font-bold">Armazenamento</p>
                    <div class="border py-0.25 px-3 rounded-xl bg-white text-md">@(auction.Product.Model.Storage ?? "--")</div>
                </li>
                <li class="flex flex-row justify-between mx-6">
                    <p class="text-md font-bold">Condição</p>
                    <div class="border py-0.25 px-3 rounded-xl bg-white text-md">@ProductModel.ConditionString(auction.Product.Condition)</div>
                </li>
                <li class="flex flex-row justify-between mx-6">
                    <p class="text-md font-bold">Estado</p>
                    <div class="border py-0.25 px-3 rounded-xl bg-white text-md">@ProductModel.StateString(auction.Product.State)</div>
                </li>
            </ul>
        </div>

        <div class="row-span-3 col-start-2 row-start-4 bg-gray-100 rounded-lg py-3">
            <div class="flex justify-center text-lg">
                Descrição
            </div>
            <div class="flex justify-center mt-1">
                @if (@auction.Product.Description != null)
                {
                    <div class="w-[90%] h-0.5 mb-2 bg-gray-300 rounded-full">
                        <p class="mt-2">
                            @auction.Product.Description
                        </p>
                    </div>
                }
                else
                {
                    <div class="w-[90%] flex justify-center h-0.5 mb-2 bg-gray-300 rounded-full">
                        <p class="mt-16 italic text-gray-400">
                            Sem descrição
                        </p>
                    </div>
                }
            </div>
        </div>

        <div class="row-span-2 col-start-3 row-start-1 bg-gray-100 rounded-lg py-3">
            <div class="flex justify-center space-x-1 items-center text-lg">
                @if (!auction.IsCancelled && auction.End > DateTime.Now && auction.End - DateTime.Now < TimeSpan.FromHours(1))
                {
                    <svg class="w-4 h-4" viewBox="0 0 48 48" fill="#c73030">
                        <path d="M 24 4 C 12.972066 4 4 12.972074 4 24 C 4 35.027926 12.972066 44 24 44 C 35.027934 44 44 35.027926 44 24 C 44 12.972074 35.027934 4 24 4 z M 24 7 C 33.406615 7 41 14.593391 41 24 C 41 33.406609 33.406615 41 24 41 C 14.593385 41 7 33.406609 7 24 C 7 14.593391 14.593385 7 24 7 z M 22.476562 11.978516 A 1.50015 1.50015 0 0 0 21 13.5 L 21 24.5 A 1.50015 1.50015 0 0 0 21.439453 25.560547 L 26.439453 30.560547 A 1.50015 1.50015 0 1 0 28.560547 28.439453 L 24 23.878906 L 24 13.5 A 1.50015 1.50015 0 0 0 22.476562 11.978516 z"></path>
                    </svg>
                    <p class="text-pcs-red">@ViewUtils.PrettyDisplayDateTime(auction.End)</p>
                }
                else
                {
                    @if (auction.IsCancelled)
                    {
                        <svg class="h-6 w-6" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M13.06 12L17.48 7.57996C17.5537 7.5113 17.6128 7.4285 17.6538 7.3365C17.6948 7.2445 17.7168 7.14518 17.7186 7.04448C17.7204 6.94378 17.7018 6.84375 17.6641 6.75036C17.6264 6.65697 17.5703 6.57214 17.499 6.50092C17.4278 6.4297 17.343 6.37356 17.2496 6.33584C17.1562 6.29811 17.0562 6.27959 16.9555 6.28137C16.8548 6.28314 16.7555 6.30519 16.6635 6.34618C16.5715 6.38717 16.4887 6.44627 16.42 6.51996L12 10.94L7.58 6.51996C7.43782 6.38748 7.24978 6.31535 7.05548 6.31878C6.86118 6.32221 6.67579 6.40092 6.53838 6.53834C6.40096 6.67575 6.32225 6.86113 6.31882 7.05544C6.3154 7.24974 6.38752 7.43778 6.52 7.57996L10.94 12L6.52 16.42C6.37955 16.5606 6.30066 16.7512 6.30066 16.95C6.30066 17.1487 6.37955 17.3393 6.52 17.48C6.66062 17.6204 6.85125 17.6993 7.05 17.6993C7.24875 17.6993 7.43937 17.6204 7.58 17.48L12 13.06L16.42 17.48C16.5606 17.6204 16.7512 17.6993 16.95 17.6993C17.1488 17.6993 17.3394 17.6204 17.48 17.48C17.6204 17.3393 17.6993 17.1487 17.6993 16.95C17.6993 16.7512 17.6204 16.5606 17.48 16.42L13.06 12Z" fill="#bbbbbb"/>
                        </svg>  
                        <p class="text-pcs-light-gray">Cancelado</p>
                    }
                    else
                    {
                        <svg class="w-4 h-4" viewBox="0 0 48 48" fillCurrentColor="currentColor">
                            <path d="M 24 4 C 12.972066 4 4 12.972074 4 24 C 4 35.027926 12.972066 44 24 44 C 35.027934 44 44 35.027926 44 24 C 44 12.972074 35.027934 4 24 4 z M 24 7 C 33.406615 7 41 14.593391 41 24 C 41 33.406609 33.406615 41 24 41 C 14.593385 41 7 33.406609 7 24 C 7 14.593391 14.593385 7 24 7 z M 22.476562 11.978516 A 1.50015 1.50015 0 0 0 21 13.5 L 21 24.5 A 1.50015 1.50015 0 0 0 21.439453 25.560547 L 26.439453 30.560547 A 1.50015 1.50015 0 1 0 28.560547 28.439453 L 24 23.878906 L 24 13.5 A 1.50015 1.50015 0 0 0 22.476562 11.978516 z"></path>
                        </svg>
                        <p>@ViewUtils.PrettyDisplayDateTime(auction.End)</p>
                    }
                }
            </div>
            <div class="flex justify-center mt-1">
                <div class="w-[90%] h-0.5 bg-gray-300 rounded-full"></div>
            </div>
            <ul class="flex flex-col mt-3 space-y-2">
                <li class="flex flex-row items-center justify-between mx-6">
                    <p class="text-md font-bold">Início:</p>
                    <div class="text-md text-gray-700">@auction.Start.ToString("dd/MM/yyyy 'às' HH:mm:ss")</div>
                </li>
                <li class="flex flex-row justify-between mx-6">
                    <p class="text-md font-bold">Fim:</p>
                    <div class="text-md text-gray-700">@auction.End.ToString("dd/MM/yyyy 'às' HH:mm:ss")</div>
                </li>
            </ul>
        </div>

        <div class="row-span-2 col-start-3 row-start-3 bg-gray-100 rounded-lg py-3">
            <div class="flex justify-center text-lg">
                Leilão
            </div>
            <div class="flex justify-center mt-1">
                <div class="w-[90%] h-0.5 bg-gray-300 rounded-full"></div>
            </div>
            <ul class="flex flex-col mt-3 space-y-2">
                <li class="flex flex-row items-center justify-between mx-6">
                    <p class="text-md font-bold">Valor inicial</p>
                    <p class="text-md">@Math.Round(auction.StartPrice, 2)€</p>
                </li>
                <li class="flex flex-row justify-between mx-6">
                    <p class="text-md font-bold">Valor atual</p>
                    <div class="flex flex-col items-center">
                        <p class="text-md text-pcs-green underline">@Math.Round(auction.CurrentPrice, 2)€</p>
                        @if (lastBid != null)
                        {
                            @if (lastBid.Bidder.ID == bidder?.ID)
                            {
                                <p class="text-[8px] text-gray-600">de @lastBid.Bidder.Name (tu)</p>
                            }
                            else
                            {
                                <p class="text-[8px] text-gray-600">de @lastBid.Bidder.Name</p>
                            }
                        }
                    </div>
                </li>
            </ul>
        </div>

        @if (bidder == null || auction.End < DateTime.Now)
        {
            @if (bidder == null && admin == null)
            {
                <button class="cursor-not-allowed row-span-2 col-start-3 row-start-5 bg-pcs-black rounded-lg flex justify-center items-center -mt-2">
                    <p class="text-white text-xl font-bold p-3">Entre para licitar</p>
                </button>
            }
            else if (auction.End < DateTime.Now && admin == null)
            {
                <button class="cursor-not-allowed row-span-2 col-start-3 row-start-5 bg-pcs-black rounded-lg flex justify-center items-center -mt-2">
                    <p class="text-white text-xl font-bold p-3">Terminado</p>
                </button>
            }
            else
            {
                <button class="cursor-not-allowed row-span-2 col-start-3 row-start-5 bg-pcs-black rounded-lg flex justify-center items-center -mt-2">
                    <p class="text-white text-xl font-bold p-3">Não pode licitar</p>
                </button>
            }
        }
        else if (bidder != null)
        {
            <div class="col-start-3 row-start-5">
                @if (bidder.Balance < auction.CurrentPrice || auction.IsCancelled)
                {
                    <input class="border border-solid rounded-xl w-full p-3 text-gray-700" type="text" placeholder="Valor a licitar (100.00)" disabled />
                }
                else
                {
                    <input 
                        class="border border-solid rounded-xl w-full p-3 text-gray-700" 
                        type="text" 
                        placeholder="Valor a licitar (100.00)"
                        @bind-value="bidValue"
                    />
                }
            </div>

            @if (bidder.Balance < auction.CurrentPrice || auction.IsCancelled)
            {
                <button class="col-start-3 row-start-6 bg-pcs-gray cursor-not-allowed rounded-lg flex justify-center items-center -mt-2" type="submit">
                    <p class="text-white text-xl font-bold p-3">Licitar</p>
                </button>
            }
            else
            {
                <button @onclick="() => Bid()" class="col-start-3 row-start-6 bg-pcs-blue hover:bg-scs-blue rounded-lg flex justify-center items-center -mt-2" type="submit">
                    <p class="text-white text-xl font-bold p-3">Licitar</p>
                </button>
            }
        }
    </div>

    <div class="mt-8">
        <p class="text-3xl font-bold">Licitações (@auction.Bids.Count)</p>
    </div>
    @if (bids.Count >= 1)
    {
        <div class="my-4 flow-root">
            <div class="-mx-4 -my-2 overflow-x-auto -mx-8">
                <div class="inline-block min-w-full py-2 align-middle px-8">
                    <div class="overflow-hidden ring-1 ring-black ring-opacity-5 rounded-lg">
                        <table class="min-w-full divide-y divide-gray-300">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 pl-6">ID</th>
                                    <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Nome</th>
                                    <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Data</th>
                                    <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Valor</th>
                                    <th scope="col" class="relative py-3.5 pl-3 pr-4 pr-6"></th>
                                </tr>
                            </thead>
                            <tbody class="divide-y divide-gray-200 bg-white">
                                @foreach (var bid in bids)
                                {
                                    <tr>
                                        <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium pl-6">Licitação #@bid.Id</td>
                                        <td class="whitespace-nowrap px-3 py-4 text-sm">@bid.Bidder.Name</td>
                                        <td class="whitespace-nowrap px-3 py-4 text-sm">@bid.Date.ToString("dd/MM/yyyy 'às' HH:mm:ss")</td>
                                        <td class="whitespace-nowrap px-3 py-4 text-sm text-pcs-green underline">@Math.Round(bid.Value, 2)€</td>
                                        <td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium pr-6"></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="flex flex-col justify-center items-center mt-14">
            <em class="text-gray-500">Sem licitações</em>
            <p class="text-gray-500">Sê o primeiro a licitar</p>
        </div>
    }
}

@code {
    [Parameter]
    public int Id { get; set; }

    private BidderModel? bidder;
    private AdminModel? admin;
    
    private AuctionModel? auction;

    private BidModel? lastBid;
    private List<BidModel> bids;

    private decimal? bidValue;

    private bool alreadyEnded = false;

    protected override async Task OnParametersSetAsync()
    {
        var ourProvider = (AuthProvider)AuthProvider;
        string? email = await ourProvider.GetEmail();
        string? role = await ourProvider.GetRole();

        if (email != null)
        {
            if (role == "Bidder")
            {
                bidder = await _userService.GetBidder(email);
            }
            else if (role == "Admin")
            {
                admin = await _userService.GetAdmin(email);
            }
        }
        
        auction = await _auctionService.GetAuction(Id);
        if (auction != null)
        {
            lastBid = await _bidService.GetAuctionLastBid(Id);
            bids = await _bidService.GetBids(Id);
        }

        await Task.Run(async () =>
        {
            while (true)
            {
                if (auction!.End < DateTime.Now && !alreadyEnded)
                {
                    alreadyEnded = true;
                    await _auctionService.SetWinner(auction!.ID, lastBid!.Bidder.NIF);
                }
                
                await Task.Delay(1000);
                await InvokeAsync(StateHasChanged);
            }
        });
    }

    private async void Bid()
    {
        if (bidValue != null)
        {
            if (bidValue <= auction!.CurrentPrice)
            {
                await js.InvokeVoidAsync("alert", "O valor da licitação tem de ser superior ao valor atual");
                return;
            }

            var bid = await _bidService.CreateBid(auction!.ID, bidder!.NIF, (decimal)bidValue);
            if (bid != null)
            {
                lastBid = bid;
                bids.Insert(0, bid);
                bidValue = null;
                auction.CurrentPrice = bid.Value;
            }
        }
    }

    private async void Cancel()
    {
        await _auctionService.CancelAuction(auction!.ID);
    }
}
